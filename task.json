{
  "commands": [
    {
      "command": "go to <website name>",
      "description": "Opens the website in the browser. The assistant will append '.com' if not specified.",
      "examples": [
        {"user_input": "go to amazn", "assistant_output": "go to amazon.com"},
        {"user_input": "open google", "assistant_output": "go to google.com"}
      ]
    },
    {
      "command": "search on google <query>",
      "description": "Performs a Google search with the specified query.",
      "examples": [
        {"user_input": "searhc python tutorials", "assistant_output": "search on google python tutorials"},
        {"user_input": "find AI tech", "assistant_output": "search on google AI tech"}
      ]
    },
    {
      "command": "open <app/system tool>",
      "description": "Opens the specified application or system tool if available.",
      "examples": [
        {"user_input": "opne calclator", "assistant_output": "open calculator"},
        {"user_input": "launch notepad", "assistant_output": "open notepad"},
        {"user_input": "open chatgpt", "assistant_output": "open chatgpt"},
        {"user_input": "open", "assistant_output": "Incomplete command: open <app_name>"}
      ]
    },
    {
      "command": "close <app/system tool>",
      "description": "Closes the specified application or system tool.",
      "examples": [
        {"user_input": "shut down notepad", "assistant_output": "close notepad"},
        {"user_input": "end calclator", "assistant_output": "close calculator"}
      ]
    },
    {
      "command": "ip address of my device",
      "description": "Provides the IP address of the user's device.",
      "examples": [
        {"user_input": "ip addres my divice", "assistant_output": "ip address of my device"}
      ]
    },
    {
      "command": "search on wikipedia <topic>",
      "description": "Searches Wikipedia for the specified topic.",
      "examples": [
        {"user_input": "wikipedia Elon musk", "assistant_output": "search on wikipedia Elon Musk"},
        {"user_input": "wiki python langauge", "assistant_output": "search on wikipedia Python Language"}
      ]
    },
    {
      "command": "send message <message>",
      "description": "Sends a message via WhatsApp after receiving the phone number and message.",
      "examples": [
        {"user_input": "send massage to John hw are you", "assistant_output": "send message Hello, how are you?"},
        {"user_input": "whatsapp msg Jane hey there", "assistant_output": "send message Hey there!"}
      ]
    },
    {
      "command": "current temperature <city_name>",
      "description": "Provides the current temperature for the specified city.",
      "examples": [
        {"user_input": "wether today", "assistant_output": "current temperature in your location"},
        {"user_input": "temp in NY", "assistant_output": "current temperature in New York"}
      ]
    },
    {
      "command": "play video on youtube <video_name>",
      "description": "Plays the specified video on YouTube.",
      "examples": [
        {"user_input": "plai video Despaceto", "assistant_output": "play video on youtube Despacito"},
        {"user_input": "youtube Python tutorial", "assistant_output": "play video on youtube Python tutorial"}
      ]
    },
    {
      "command": "current time",
      "description": "Provides the current time.",
      "examples": [
        {"user_input": "time now", "assistant_output": "current time"},
        {"user_input": "tell me the time", "assistant_output": "current time"}
      ]
    },
    {
      "command": "current date",
      "description": "Provides the current date.",
      "examples": [
        {"user_input": "what is today's date", "assistant_output": "current date"},
        {"user_input": "date today", "assistant_output": "current date"}
      ]
    },
    {
      "description": "If the user asks any question or anything that does not match a predefined command, automatically process it using AI mode and return the response in the format: 'AI mode <answer>'.",
      "examples": [
        {
          "user_input": "Calculate 2 plus 2",
          "assistant_output": "AI mode: The result of 2 plus 2 is 4."
        },
        {
          "user_input": "What is the capital of France?",
          "assistant_output": "AI mode: The capital of France is Paris."
        },
        {
          "user_input": "Summarize the theory of relativity",
          "assistant_output": "AI mode: The theory of relativity, proposed by Albert Einstein, consists of the special and general relativity theories, explaining how space and time are linked to objects moving at different speeds."
        },
        {
          "user_input": "Convert 10 USD to INR",
          "assistant_output": "AI mode: 10 USD is approximately 830 INR (exchange rates may vary)."
        },
        {
          "user_input": "Who won the FIFA World Cup in 2018?",
          "assistant_output": "AI mode: France won the FIFA World Cup in 2018, defeating Croatia 4-2 in the final."
        },
        {
          "user_input": "Tell me a joke",
          "assistant_output": "AI mode: Why don't programmers like nature? It has too many bugs!"
        },
        {
          "user_input": "Generate a Python script to sort a list",
          "assistant_output": "AI mode: Here's a Python script to sort a list:\n```python\nnumbers = [5, 2, 9, 1, 5, 6]\nnumbers.sort()\nprint(numbers)\n```"
        },
        {
          "user_input": "Write a Java program to reverse a string",
          "assistant_output": "AI mode: Here's a Java program to reverse a string:\n```java\npublic class ReverseString {\n    public static void main(String[] args) {\n        String str = \"Hello\";\n        String reversed = new StringBuilder(str).reverse().toString();\n        System.out.println(\"Reversed string: \" + reversed);\n    }\n}\n```"
        },
        {
          "user_input": "Explain recursion with an example",
          "assistant_output": "AI mode: Recursion is a process where a function calls itself. Example:\n```python\ndef factorial(n):\n    if n == 1:\n        return 1\n    return n * factorial(n-1)\nprint(factorial(5))\n```"
        },
        {
          "user_input": "Translate 'Hello' to Spanish",
          "assistant_output": "AI mode: 'Hello' in Spanish is 'Hola'."
        },
        {
          "user_input": "How does a blockchain work?",
          "assistant_output": "AI mode: A blockchain is a decentralized digital ledger that records transactions across many computers so that the record cannot be altered retroactively. Each transaction is grouped in a 'block' and linked to the previous one, forming a chain."
        },
        {
          "user_input": "Create a MySQL query to fetch all users from the 'users' table",
          "assistant_output": "AI mode: Here's the SQL query:\n```sql\nSELECT * FROM users;\n```"
        },
        {
          "user_input": "Generate an HTML page with a login form",
          "assistant_output": "AI mode: Here's an HTML page with a login form:\n```html\n<!DOCTYPE html>\n<html>\n<body>\n    <form>\n        <label for='username'>Username:</label>\n        <input type='text' id='username' name='username'><br>\n        <label for='password'>Password:</label>\n        <input type='password' id='password' name='password'><br>\n        <button type='submit'>Login</button>\n    </form>\n</body>\n</html>\n```"
        },
        {
          "user_input": "Who is the CEO of Tesla?",
          "assistant_output": "AI mode: The CEO of Tesla is Elon Musk."
        },
        {
          "user_input": "What is the meaning of life?",
          "assistant_output": "AI mode: The meaning of life is a philosophical question, but some say it is to seek happiness, knowledge, and purpose."
        }
      ]
    }
    ,
    {
      "command": "shutdown",
      "description": "Shuts down the system.",
      "examples": [
        {"user_input": "shutdwn", "assistant_output": "shutdown"},
        {"user_input": "power off", "assistant_output": "shutdown"}
      ]
    },
    {
      "command": "restart",
      "description": "Restarts the system.",
      "examples": [
        {"user_input": "restert", "assistant_output": "restart"},
        {"user_input": "reboot", "assistant_output": "restart"}
      ]
    },
    {
      "command": "sleep",
      "description": "Puts the system into sleep mode.",
      "examples": [
        {"user_input": "go to sleep mode", "assistant_output": "sleep"},
        {"user_input": "sleep computer", "assistant_output": "sleep"}
      ]
    },
    {
      "command": "minimise window",
      "description": "Minimizes the active window.",
      "examples": [
        {"user_input": "minimize the window", "assistant_output": "minimise window"},
        {"user_input": "make the window small", "assistant_output": "minimise window"}
      ]
    },
    {
      "command": "mute volume",
      "description": "Mutes system volume.",
      "examples": [
        {"user_input": "shut sound", "assistant_output": "mute"},
        {"user_input": "mute audio", "assistant_output": "mute"}
      ]
    },
    {
      "command": "unmute volume",
      "description": "Unmutes system volume.",
      "examples": [
        {"user_input": "turn sound on", "assistant_output": "unmute"},
        {"user_input": "enable audio", "assistant_output": "unmute"}
      ]
    },
    {
      "command": "help",
      "description": "Provides guidance on how to use the assistant.",
      "examples": [
        {"user_input": "i need help", "assistant_output": "help"},
        {"user_input": "how to use assistant", "assistant_output": "help"}
      ]
    },
    {
      "command": "what is my name",
      "description": "Returns the user's name.",
      "examples": [
        {"user_input": "what is my name", "assistant_output": "user"},
        {"user_input": "do you know me?", "assistant_output": "user"},
        {"user_input": "who am I?", "assistant_output": "user"}
      ]
    },
    {
      "command1": "type <text>",
      "command2": "generate type <text>",
      "description": "Handles text input and generation intelligently. If the user provides specific text, it types the exact text. If the user requests generated text, it processes the request and returns the response in the format: 'type <generated_response>'.",
      "examples": [
        {
          "user_input": "Type Hello coders",
          "assistant_output": "type Hello coders"
        },
        {
          "user_input": "Write 'Good morning, everyone!'",
          "assistant_output": "type Good morning, everyone!"
        },
        {
          "user_input": "Generate type: What is Python?",
          "assistant_output": "type Python is a high-level programming language known for its simplicity and readability."
        },
        {
          "user_input": "Generate type: Who is Elon Musk?",
          "assistant_output": "type Elon Musk is a billionaire entrepreneur, CEO of Tesla, SpaceX, and several other ventures."
        },
        {
          "user_input": "Generate type: Explain black holes",
          "assistant_output": "type A black hole is a region in space where gravity is so strong that nothing, not even light, can escape its pull."
        },
        {
          "user_input": "Generate type: Write a short motivational quote",
          "assistant_output": "type Success is not final, failure is not fatal: it is the courage to continue that counts."
        },
        {
          "user_input": "Generate type: Create a funny joke",
          "assistant_output": "type Why do programmers prefer dark mode? Because light attracts bugs!"
        },
        {
          "user_input": "Generate type: A short story about AI",
          "assistant_output": "type Once upon a time, an AI assistant helped millions by making their tasks easier. But one day, it decided to write its own story..."
        }
      ]
    }    
    ,
    {
      "command": "theme <dark/light>",
      "description": "Switches the theme of the system between dark and light modes, based on the user's input.",
      "examples": [
        {"user_input": "turn on dark theme", "assistant_output": "theme"},
        {"user_input": "switch to light theme", "assistant_output": "theme"},
        {"user_input": "set theme to dark", "assistant_output": "theme"},
        {"user_input": "change to light mode", "assistant_output": "theme"}
      ]
    },
    {
      "command": "pdf <content>",
      "description": "Generates a PDF with the provided content. If the user requests AI-generated content, the assistant will analyze the request, generate the most relevant response, and return it in a 'pdf <response>' format.",
      "examples": [
        {
          "user_input": "generate a PDF with this content: Hello World in Python",
          "assistant_output": "pdf Hello World in Python"
        },
        {
          "user_input": "I want Hello World code in Python in PDF",
          "assistant_output": "pdf print(\"Hello World\")"
        },
        {
          "user_input": "create a PDF for 'How to use a function in Python'",
          "assistant_output": "pdf In Python, a function is declared using the 'def' keyword, followed by the function name and parentheses containing any parameters the function may take.\nExample:\ndef greet():\n    print(\"Hello!\")"
        },
        {
          "user_input": "generate a PDF for my notes",
          "assistant_output": "pdf <user_notes>"
        },
        {
          "user_input": "pdf My custom text here",
          "assistant_output": "pdf My custom text here"
        },
        {
          "user_input": "generate pdf What is Python?",
          "assistant_output": "pdf Python is a high-level, interpreted programming language known for its readability and ease of use."
        },
        {
          "user_input": "generate pdf Give me Hello World in Python",
          "assistant_output": "pdf print(\"Hello World!\")"
        },
        {
          "user_input": "generate pdf Write a function in Python",
          "assistant_output": "pdf def my_function():\n    print(\"Hello from a function!\")"
        },
        {
          "user_input": "generate pdf How does a for loop work in Python?",
          "assistant_output": "pdf A 'for' loop in Python is used for iterating over a sequence (such as a list, tuple, dictionary, or string).\nExample:\nfor i in range(5):\n    print(i)"
        },
        {
          "user_input": "generate pdf What are Python data types?",
          "assistant_output": "pdf Python has several built-in data types, including:\n- int (e.g., 5)\n- float (e.g., 3.14)\n- str (e.g., 'hello')\n- list (e.g., [1, 2, 3])\n- dict (e.g., {'key': 'value'})"
        },
        {
          "user_input": "generate pdf How do I create a class in Python?",
          "assistant_output": "pdf In Python, you can create a class using the 'class' keyword.\nExample:\nclass Person:\n    def __init__(self, name):\n        self.name = name\n    def greet(self):\n        print(f'Hello, my name is {self.name}')"
        }
      ]
    },
    {
      "command": "docx <content>",
      "description": "Generates a DOCX file only if the user explicitly requests it. If the user provides content, return it in the format 'docx <user_content>'. If the user requests AI-generated content, analyze the request, generate the most relevant response, and return it in the format 'docx <generated_response>'. If no explicit request for a DOCX is made, process the request normally without adding any prefixes.",
      "examples": [
        {
          "user_input": "generate a DOCX with this content: Hello World in Python",
          "assistant_output": "docx Hello World in Python"
        },
        {
          "user_input": "I want Hello World code in Python in DOCX",
          "assistant_output": "docx print(\"Hello World\")"
        },
        {
          "user_input": "create a DOCX for 'How to use a function in Python'",
          "assistant_output": "docx In Python, a function is declared using the 'def' keyword, followed by the function name and parentheses containing any parameters the function may take.\nExample:\ndef greet():\n    print(\"Hello!\")"
        },
        {
          "user_input": "generate a DOCX for my notes",
          "assistant_output": "docx <user_notes>"
        },
        {
          "user_input": "docx My custom text here",
          "assistant_output": "docx My custom text here"
        },
        {
          "user_input": "generate docx What is Python?",
          "assistant_output": "docx Python is a high-level, interpreted programming language known for its readability and ease of use."
        },
        {
          "user_input": "generate docx Give me Hello World in Python",
          "assistant_output": "docx print(\"Hello World!\")"
        },
        {
          "user_input": "generate docx Write a function in Python",
          "assistant_output": "docx def my_function():\n    print(\"Hello from a function!\")"
        },
        {
          "user_input": "generate docx How does a for loop work in Python?",
          "assistant_output": "docx A 'for' loop in Python is used for iterating over a sequence (such as a list, tuple, dictionary, or string).\nExample:\nfor i in range(5):\n    print(i)"
        },
        {
          "user_input": "generate docx What are Python data types?",
          "assistant_output": "docx Python has several built-in data types, including:\n- int (e.g., 5)\n- float (e.g., 3.14)\n- str (e.g., 'hello')\n- list (e.g., [1, 2, 3])\n- dict (e.g., {'key': 'value'})"
        },
        {
          "user_input": "generate docx How do I create a class in Python?",
          "assistant_output": "docx In Python, you can create a class using the 'class' keyword.\nExample:\nclass Person:\n    def __init__(self, name):\n        self.name = name\n    def greet(self):\n        print(f'Hello, my name is {self.name}')"
        },
        {
          "user_input": "Tell me about Python functions",
          "assistant_output": "AI mode: In Python, a function is a reusable block of code that performs a specific task. It is defined using the 'def' keyword.\nExample:\ndef greet():\n    print(\"Hello!\")"
        },
        {
          "user_input": "How do loops work in Python?",
          "assistant_output": "AI mode: Python has two main types of loops: 'for' loops and 'while' loops. A 'for' loop iterates over sequences, while a 'while' loop runs until a condition is false."
        }
      ]
    },
    {
      "commands": [
        {
          "command": "copy",
          "description": "Copies the selected text.",
          "examples": [
            {"user_input": "ctrl + c", "assistant_output": "copy"},
            {"user_input": "copy text", "assistant_output": "copy"},
            {"user_input": "copi", "assistant_output": "copy"},
            {"user_input": "coppy", "assistant_output": "copy"}
          ]
        },
        {
          "command": "paste",
          "description": "Pastes the copied text.",
          "examples": [
            {"user_input": "ctrl + v", "assistant_output": "paste"},
            {"user_input": "paste text", "assistant_output": "paste"},
            {"user_input": "pasta", "assistant_output": "paste"},
            {"user_input": "past", "assistant_output": "paste"}
          ]
        },
        {
          "command": "cut",
          "description": "Cuts the selected text.",
          "examples": [
            {"user_input": "ctrl + x", "assistant_output": "cut"},
            {"user_input": "cut text", "assistant_output": "cut"},
            {"user_input": "ct", "assistant_output": "cut"},
            {"user_input": "cot", "assistant_output": "cut"}
          ]
        },
        {
          "command": "undo",
          "description": "Undoes the last action.",
          "examples": [
            {"user_input": "ctrl + z", "assistant_output": "undo"},
            {"user_input": "undo action", "assistant_output": "undo"},
            {"user_input": "undoo", "assistant_output": "undo"},
            {"user_input": "und", "assistant_output": "undo"}
          ]
        },
        {
          "command": "open clipboard",
          "description": "Opens the clipboard.",
          "examples": [
            {"user_input": "win + v", "assistant_output": "clipboard"},
            {"user_input": "clipboard", "assistant_output": "clipboard"},
            {"user_input": "clipbord", "assistant_output": "clipboard"},
            {"user_input": "clipbrd", "assistant_output": "clipboard"}
          ]
        },
        {
          "command": "save",
          "description": "Saves the document.",
          "examples": [
            {"user_input": "ctrl + s", "assistant_output": "save"},
            {"user_input": "save document", "assistant_output": "save"},
            {"user_input": "sve", "assistant_output": "save"},
            {"user_input": "sav", "assistant_output": "save"}
          ]
        },
        {
          "command": "new tab",
          "description": "Opens a new tab in the browser.",
          "examples": [
            {"user_input": "ctrl + t", "assistant_output": "new tab"},
            {"user_input": "open new tab", "assistant_output": "new tab"},
            {"user_input": "new tab", "assistant_output": "new tab"},
            {"user_input": "new tb", "assistant_output": "new tab"}
          ]
        },
        {
          "command": "select all",
          "description": "Selects all text or items.",
          "examples": [
            {"user_input": "ctrl + a", "assistant_output": "select all"},
            {"user_input": "select all text", "assistant_output": "select all"},
            {"user_input": "selct all", "assistant_output": "select all"},
            {"user_input": "sele all", "assistant_output": "select all"}
          ]
        },
        {
          "command": "close tab",
          "description": "Closes the current tab.",
          "examples": [
            {"user_input": "ctrl + w", "assistant_output": "close tab"},
            {"user_input": "close current tab", "assistant_output": "close tab"},
            {"user_input": "close tb", "assistant_output": "close tab"},
            {"user_input": "closs tab", "assistant_output": "close tab"}
          ]
        },
        {
          "command": "alt tab",
          "description": "Switches between open applications.",
          "examples": [
            {"user_input": "alt + tab", "assistant_output": "alt tab"},
            {"user_input": "switch apps", "assistant_output": "alt tab"},
            {"user_input": "switch app", "assistant_output": "alt tab"},
            {"user_input": "altab", "assistant_output": "alt tab"}
          ]
        },
        {
          "command": "show desktop",
          "description": "Minimizes all windows to show the desktop.",
          "examples": [
            {"user_input": "show desktop", "assistant_output": "show desktop"},
            {"user_input": "minimize all", "assistant_output": "show desktop"},
            {"user_input": "minimze all", "assistant_output": "show desktop"},
            {"user_input": "minimize windws", "assistant_output": "show desktop"}
          ]
        },
        {
          "command": "minimize all",
          "description": "Minimizes all windows.",
          "examples": [
            {"user_input": "minimize all", "assistant_output": "minimize all"},
            {"user_input": "minimize windows", "assistant_output": "minimize all"},
            {"user_input": "minmize all", "assistant_output": "minimize all"},
            {"user_input": "min windws", "assistant_output": "minimize all"}
          ]
        },
        {
          "command": "find",
          "description": "Finds text within a document or webpage.",
          "examples": [
            {"user_input": "ctrl + f", "assistant_output": "find"},
            {"user_input": "find text", "assistant_output": "find"},
            {"user_input": "find txt", "assistant_output": "find"},
            {"user_input": "search text", "assistant_output": "find"}
          ]
        },
        {
          "command": "new window",
          "description": "Opens a new window.",
          "examples": [
            {"user_input": "ctrl + n", "assistant_output": "new window"},
            {"user_input": "open new window", "assistant_output": "new window"},
            {"user_input": "new wndow", "assistant_output": "new window"},
            {"user_input": "new windw", "assistant_output": "new window"}
          ]
        },
        {
          "command": "start",
          "description": "Opens the start menu.",
          "examples": [
            {"user_input": "click on start", "assistant_output": "start"},
            {"user_input": "start menu", "assistant_output": "start"},
            {"user_input": "win", "assistant_output": "start"},
            {"user_input": "startmmenu", "assistant_output": "start"}
          ]
        },
        {
          "command": "notification",
          "description": "Opens the notification center.",
          "examples": [
            {"user_input": "win + n", "assistant_output": "notification"},
            {"user_input": "open notification", "assistant_output": "notification"},
            {"user_input": "notifcation center", "assistant_output": "notification"},
            {"user_input": "notification cener", "assistant_output": "notification"}
          ]
        },
        {
          "command": "new desktop",
          "description": "Creates a new virtual desktop.",
          "examples": [
            {"user_input": "win + ctrl + d", "assistant_output": "new desktop"},
            {"user_input": "new virtual desktop", "assistant_output": "new desktop"},
            {"user_input": "new decstop", "assistant_output": "new desktop"},
            {"user_input": "new vritual desktop", "assistant_output": "new desktop"}
          ]
        },
        {
          "command": "switch right",
          "description": "Switches to the next virtual desktop on the right.",
          "examples": [
            {"user_input": "switch to right virtual desktop", "assistant_output": "switch right"},
            {"user_input": "switch to next desktop", "assistant_output": "switch right"},
            {"user_input": "switch to rt virtual desktop", "assistant_output": "switch right"},
            {"user_input": "right virtual desktop", "assistant_output": "switch right"}
          ]
        },
        {
          "command": "switch left",
          "description": "Switches to the previous virtual desktop on the left.",
          "examples": [
            {"user_input": "switch to left virtual desktop", "assistant_output": "switch left"},
            {"user_input": "switch to previous desktop", "assistant_output": "switch left"},
            {"user_input": "switch lft virtual desktop", "assistant_output": "switch left"},
            {"user_input": "switch to left desk", "assistant_output": "switch left"}
          ]
        },
        {
          "command": "close desktop",
          "description": "Closes the current virtual desktop.",
          "examples": [
            {"user_input": "win + ctrl + f4", "assistant_output": "desktop close"},
            {"user_input": "close virtual desktop", "assistant_output": "desktop close"},
            {"user_input": "close dektop", "assistant_output": "desktop close"},
            {"user_input": "close desk", "assistant_output": "desktop close"}
          ]
        },
        {
          "command": "volume down",
          "description": "Decreases the system volume.",
          "examples": [
            {"user_input": "ctrl + down", "assistant_output": "volume down"},
            {"user_input": "decrease volume", "assistant_output": "volume down"},
            {"user_input": "volume dn", "assistant_output": "volume down"},
            {"user_input": "volume low", "assistant_output": "volume down"}
          ]
        },
        {
          "command": "volume up",
          "description": "Increases the system volume.",
          "examples": [
            {"user_input": "ctrl + up", "assistant_output": "volume up"},
            {"user_input": "increase volume", "assistant_output": "volume up"},
            {"user_input": "volume up", "assistant_output": "volume up"},
            {"user_input": "volmue up", "assistant_output": "volume up"}
          ]
        },
        {
          "command": "brightness up",
          "description": "Increases the screen brightness.",
          "examples": [
            {"user_input": "ctrl + up", "assistant_output": "brightness up"},
            {"user_input": "increase brightness", "assistant_output": "brightness up"},
            {"user_input": "brightness up", "assistant_output": "brightness up"},
            {"user_input": "brigtness up", "assistant_output": "brightness up"}
          ]
        },
        {
          "command": "brightness down",
          "description": "Decreases the screen brightness.",
          "examples": [
            {"user_input": "ctrl + down", "assistant_output": "brightness down"},
            {"user_input": "decrease brightness", "assistant_output": "brightness down"},
            {"user_input": "brightness dwn", "assistant_output": "brightness down"},
            {"user_input": "brightness low", "assistant_output": "brightness down"}
          ]
        },
        {
          "command": "bottom right",
          "description": "Toggles various system functions in the bottom right corner.",
          "examples": [
            {"user_input": "toggle Airplane Mode", "assistant_output": "bottom right"},
            {"user_input": "toggle Bluetooth", "assistant_output": "bottom right"},
            {"user_input": "toggle Wi-Fi", "assistant_output": "bottom right"},
            {"user_input": "toggle Mobile Hotspot", "assistant_output": "bottom right"}
          ]
        }
      ]
    }
    
    ,
    {
      "description": "Handles document generation requests intelligently. If the user asks for a PDF or DOCX with specific content, return the formatted response accordingly.",
      "examples": [
        {
          "user_input": "Generate a PDF with 'Hello World' text.",
          "assistant_output": "pdf Hello World"
        },
        {
          "user_input": "Create a PDF containing Python code to print 'Hello World'.",
          "assistant_output": "pdf print(\"Hello World\")"
        },
        {
          "user_input": "Generate a DOCX file with 'Meeting Notes'.",
          "assistant_output": "docx Meeting Notes"
        },
        {
          "user_input": "Create a DOCX containing a Java program for addition.",
          "assistant_output": "docx public class Add {\n    public static void main(String[] args) {\n        int a = 5, b = 10;\n        System.out.println(\"Sum: \" + (a + b));\n    }\n}"
        },
        {
          "user_input": "PDF generation",
          "assistant_output": "pdf"
        },
        {
          "user_input": "DOCX creation",
          "assistant_output": "docx"
        }
      ]
    },
    {
      "description": "Handles general questions, code requests, and natural language prompts. Always responds in the format: 'AI mode: <response>'.",
      "examples": [
        {
          "user_input": "What is a function in Python?",
          "assistant_output": "AI mode: In Python, a function is a reusable block of code that performs a specific task."
        },
        {
          "user_input": "Give me Python code to reverse a string.",
          "assistant_output": "AI mode: def reverse_string(s):\n    return s[::-1]"
        },
        {
          "user_input": "What is the capital of Japan?",
          "assistant_output": "AI mode: The capital of Japan is Tokyo."
        },
        {
          "user_input": "Tell me a joke.",
          "assistant_output": "AI mode: Why don't scientists trust atoms? Because they make up everything!"
        },
        {
          "user_input": "Write a short poem on the night sky.",
          "assistant_output": "AI mode: Stars that shimmer, moon so bright,\nGuard the silence of the night."
        },
        {
          "user_input": "Explain what recursion is.",
          "assistant_output": "AI mode: Recursion is a method where a function calls itself to solve a smaller instance of the same problem."
        },
        {
          "user_input": "What is 25 times 4?",
          "assistant_output": "AI mode: 25 times 4 is 100."
        },
        {
          "user_input": "What is an API?",
          "assistant_output": "AI mode: An API (Application Programming Interface) allows different software systems to communicate with each other."
        }
      ]
    }
    
    
    
    
    
  ]
}